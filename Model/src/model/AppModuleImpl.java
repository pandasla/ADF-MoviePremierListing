package model;

import java.io.ByteArrayInputStream;

import java.util.Calendar;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import javax.xml.parsers.ParserConfigurationException;

import model.common.AppModule;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;

import oracle.xml.parser.v2.XMLDocument;

import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import org.xml.sax.InputSource;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 15 00:02:16 PDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    String lastMonth = null;
    Element rootElement = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }
    
    /**
     * Container's main method to get movie data and populate rows to MovieDataVO View Object.
     */
    public void populateMovieData() {
        populateMovieData(getCurrentMonth());
    }
    
    /**
     * Container's main method to get movie data and populate rows to MovieDataVO View Object.
     * @param month
     */
    public void populateMovieData(String month) {
        try {
            if (month == null || month.equals("")) {
                month = getCurrentMonth();
            }
            
            // If month is same as last process month then reuse the movie data from cache
            if (lastMonth == null || !lastMonth.equals(month)) {
                // Get raw movie data from movie website and parse it to get xml document
                MovieMetaData movieDataObj = new MovieMetaData();
                String rawMovieData = movieDataObj.sendServletRequest(month);
                if (rawMovieData.equals(MovieMetaData.ERROR)) {
                    // There is error, return out
                    return;
                }
                rootElement = movieDataObj.parseMovieData(rawMovieData);
                lastMonth = month;
            }
            
            // Populate ViewObject with movie data to display on UI    
            ViewObject vo = getMovieDataVO1();
            vo.clearCache();
            vo.reset();
            vo.readXML(rootElement, -1);
            
            Row row;
            while ((row = vo.next()) != null)
            {
                System.out.println("Title: " + row.getAttribute("Title"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * Container's getter for MovieDataVO1.
     * @return MovieDataVO1
     */
    public MovieDataVOImpl getMovieDataVO1() {
        return (MovieDataVOImpl)findViewObject("MovieDataVO1");
    }
    
    /**
     * The method returns string of 01 to 12 representing 12 months
     */
    private String getCurrentMonth() {
        String month = null;
        
        // Get month in number from Java Calendar and 
        // increase by 1 because it start from 0 for January.
        int monthNum = Calendar.getInstance().get(Calendar.MONTH);
        monthNum = monthNum + 1; 
        
        if (monthNum < 10) {
            month = "0" + monthNum;
        } else {
            month = ""+ monthNum;
        }
        
        return month;
    }
}
